// --------- SINGLE SELECTION ---------

TableConfig<Contact> singleTableConfig = new TableConfig<>();
singleTableConfig
        .addColumn(ColumnConfig.<Contact>create("id", "#")
                .textAlign("right")
                .asHeader()
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getIndex() + 1 + "")))

        .addColumn(ColumnConfig.<Contact>create("status", "Status")
                .textAlign("center")
                .setCellRenderer(cell -> {
                    if (cell.getTableRow().getRecord().isActive()) {
                        return Style.of(Icons.ALL.check_circle()).setColor(Color.GREEN_DARKEN_3.getHex()).asElement();
                    } else {
                        return Style.of(Icons.ALL.highlight_off()).setColor(Color.RED_DARKEN_3.getHex()).asElement();
                    }
                }))
        .addColumn(ColumnConfig.<Contact>create("firstName", "First name")
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getName())))


        .addColumn(ColumnConfig.<Contact>create("gender", "Gender")
                .setCellRenderer(cell -> ContactUiUtils.getGenderElement(cell.getRecord()))
                .textAlign("center"))

        .addColumn(ColumnConfig.<Contact>create("eyeColor", "Eye color")
                .setCellRenderer(cell -> ContactUiUtils.getEyeColorElement(cell.getRecord()))
                .textAlign("center"))

        .addColumn(ColumnConfig.<Contact>create("balance", "Balance")
                .setCellRenderer(cellInfo -> ContactUiUtils.getBalanceElement(cellInfo.getRecord())))

        .addColumn(ColumnConfig.<Contact>create("email", "Email")
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getEmail())))

        .addColumn(ColumnConfig.<Contact>create("phone", "Phone")
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getPhone())))

        .addColumn(ColumnConfig.<Contact>create("badges", "Badges")
                .setCellRenderer(cell -> {
                    if (cell.getTableRow().getRecord().getAge() < 35) {
                        return Badge.create("Young")
                                .setBackground(ColorScheme.GREEN.color()).asElement();
                    }
                    return new Text("");
                }));


singleTableConfig.addPlugin(new SelectionPlugin<>(ColorScheme.LIGHT_BLUE));
singleTableConfig.setMultiSelect(false);

LocalListDataStore<Contact> singleLocalListDataStore = new LocalListDataStore<>();
DataTable<Contact> singleTable = new DataTable<>(singleTableConfig, singleLocalListDataStore);


// --------- MULTI SELECTION ---------

TableConfig<Contact> multiTableConfig = new TableConfig<>();
multiTableConfig
        .addColumn(ColumnConfig.<Contact>create("id", "#")
                .textAlign("right")
                .asHeader()
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getIndex() + 1 + "")))

        .addColumn(ColumnConfig.<Contact>create("status", "Status")
                .textAlign("center")
                .setCellRenderer(cell -> {
                    if (cell.getTableRow().getRecord().isActive()) {
                        return Style.of(Icons.ALL.check_circle()).setColor(Color.GREEN_DARKEN_3.getHex()).asElement();
                    } else {
                        return Style.of(Icons.ALL.highlight_off()).setColor(Color.RED_DARKEN_3.getHex()).asElement();
                    }
                }))
        .addColumn(ColumnConfig.<Contact>create("firstName", "First name")
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getName())))


        .addColumn(ColumnConfig.<Contact>create("gender", "Gender")
                .setCellRenderer(cell -> ContactUiUtils.getGenderElement(cell.getRecord()))
                .textAlign("center"))

        .addColumn(ColumnConfig.<Contact>create("eyeColor", "Eye color")
                .setCellRenderer(cell -> ContactUiUtils.getEyeColorElement(cell.getRecord()))
                .textAlign("center"))

        .addColumn(ColumnConfig.<Contact>create("balance", "Balance")
                .setCellRenderer(cellInfo -> ContactUiUtils.getBalanceElement(cellInfo.getRecord())))

        .addColumn(ColumnConfig.<Contact>create("email", "Email")
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getEmail())))

        .addColumn(ColumnConfig.<Contact>create("phone", "Phone")
                .setCellRenderer(cell -> new Text(cell.getTableRow().getRecord().getPhone())))

        .addColumn(ColumnConfig.<Contact>create("badges", "Badges")
                .setCellRenderer(cell -> {
                    if (cell.getTableRow().getRecord().getAge() < 35) {
                        return Badge.create("Young")
                                .setBackground(ColorScheme.GREEN.color()).asElement();
                    }
                    return new Text("");
                }));


multiTableConfig.addPlugin(new SelectionPlugin<>(ColorScheme.LIGHT_BLUE));

LocalListDataStore<Contact> multiLocalListDataStore = new LocalListDataStore<>();
DataTable<Contact> multiTable = new DataTable<>(multiTableConfig, multiLocalListDataStore);


element.appendChild(Card.create("SELECTION PLUGIN", "Enable row selection by adding the selection plugin, pass different selection style colors in the constructor.")
        .setCollapsible()
        .appendChild(BlockHeader.create("SINGLE SELECTION"))
        .appendChild(new TableStyleActions(singleTable))
        .appendChild(singleTable.asElement())
        .appendChild(br())
        .appendChild(br())
        .appendChild(br())
        .appendChild(hr())
        .appendChild(BlockHeader.create("MULTI SELECTION"))
        .appendChild(new TableStyleActions(multiTable))
        .appendChild(multiTable.asElement())
        .asElement());


List<Contact> contacts = ...
singleLocalListDataStore.setData(contacts);
singleLocalListDataStore.load();
multiLocalListDataStore.setData(contacts);
multiLocalListDataStore.load();