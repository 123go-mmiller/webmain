movingBar = ProgressBar.create(1000);
//we are doing this since we want to move the progress for the demo,
// in real use cases progress bar value increases by some data feedback.
movingBar.asElement().style.setProperty("transition", "width 500ms linear", "important");

element.appendChild(Card.create("BASIC EXAMPLES")
        .appendChild(Progress.create()
                .appendChild(ProgressBar.create(100)
                        .setValue(90)))
        .appendChild(Progress.create()
                .appendChild(ProgressBar.create(100)
                        .showText()
                        .setValue(60)))
        .appendChild(Progress.create()
                .appendChild(ProgressBar.create(100)
                        .showText()
                        .textExpression("{value} out of {maxValue} completed")
                        .setValue(75)))
        .appendChild(Progress.create()
                .appendChild(ProgressBar.create(100)
                        .showText()
                        .textExpression("{value} out of {maxValue} completed")
                        .setValue(40)))
        .appendChild(Progress.create()
                .appendChild(movingBar))
        .asElement());

animationFrameCallback = p0 -> {
    if (movingBar.getValue() >= movingBar.getMaxValue()) {
        movingBar.textExpression("Done");
    } else
        movingBar.setValue(movingBar.getValue() + 1);

    animationFrame = DomGlobal.requestAnimationFrame(animationFrameCallback);
};